//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SocialNetWorkv1._0.App_Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Soc_NetWorkEntitiesProc : DbContext
    {
        public Soc_NetWorkEntitiesProc()
            : base("name=Soc_NetWorkEntitiesProc")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int AddFriendRequest(Nullable<int> iDUser, Nullable<int> iDFriend)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            var iDFriendParameter = iDFriend.HasValue ?
                new ObjectParameter("IDFriend", iDFriend) :
                new ObjectParameter("IDFriend", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFriendRequest", iDUserParameter, iDFriendParameter);
        }
    
        public virtual int AddNewFriend(Nullable<int> iDUser, Nullable<int> iDFriend)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            var iDFriendParameter = iDFriend.HasValue ?
                new ObjectParameter("IDFriend", iDFriend) :
                new ObjectParameter("IDFriend", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewFriend", iDUserParameter, iDFriendParameter);
        }
    
        public virtual int AddUser(string loginUser, string password, Nullable<int> iD)
        {
            var loginUserParameter = loginUser != null ?
                new ObjectParameter("LoginUser", loginUser) :
                new ObjectParameter("LoginUser", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUser", loginUserParameter, passwordParameter, iDParameter);
        }
    
        public virtual int DeleteFriendRequest(Nullable<int> iDUser, Nullable<int> iDFriend)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            var iDFriendParameter = iDFriend.HasValue ?
                new ObjectParameter("IDFriend", iDFriend) :
                new ObjectParameter("IDFriend", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFriendRequest", iDUserParameter, iDFriendParameter);
        }
    
        public virtual int DeleteListFriens(Nullable<int> iDUser, Nullable<int> iDFriens)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            var iDFriensParameter = iDFriens.HasValue ?
                new ObjectParameter("IDFriens", iDFriens) :
                new ObjectParameter("IDFriens", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteListFriens", iDUserParameter, iDFriensParameter);
        }
    
        public virtual int DeleteUser(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", iDParameter);
        }
    
        public virtual int EditPassword(Nullable<int> iD, string password)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditPassword", iDParameter, passwordParameter);
        }
    
        public virtual int EditUserInfo(Nullable<int> iD, string firstname, string lastname, Nullable<int> age, string email, string adress)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var lastnameParameter = lastname != null ?
                new ObjectParameter("Lastname", lastname) :
                new ObjectParameter("Lastname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var adressParameter = adress != null ?
                new ObjectParameter("Adress", adress) :
                new ObjectParameter("Adress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EditUserInfo", iDParameter, firstnameParameter, lastnameParameter, ageParameter, emailParameter, adressParameter);
        }
    
        public virtual ObjectResult<SendMessage_Result> SendMessage(Nullable<int> iDSend, Nullable<int> iDCatch, string text, Nullable<System.DateTime> semnTime)
        {
            var iDSendParameter = iDSend.HasValue ?
                new ObjectParameter("IDSend", iDSend) :
                new ObjectParameter("IDSend", typeof(int));
    
            var iDCatchParameter = iDCatch.HasValue ?
                new ObjectParameter("IDCatch", iDCatch) :
                new ObjectParameter("IDCatch", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var semnTimeParameter = semnTime.HasValue ?
                new ObjectParameter("SemnTime", semnTime) :
                new ObjectParameter("SemnTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SendMessage_Result>("SendMessage", iDSendParameter, iDCatchParameter, textParameter, semnTimeParameter);
        }
    
        public virtual ObjectResult<ShowListFriens_Result> ShowListFriens(Nullable<int> iDUser)
        {
            var iDUserParameter = iDUser.HasValue ?
                new ObjectParameter("IDUser", iDUser) :
                new ObjectParameter("IDUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowListFriens_Result>("ShowListFriens", iDUserParameter);
        }
    
        public virtual ObjectResult<ShowMessage_Result> ShowMessage(Nullable<int> iDSend, Nullable<int> iDCatch)
        {
            var iDSendParameter = iDSend.HasValue ?
                new ObjectParameter("IDSend", iDSend) :
                new ObjectParameter("IDSend", typeof(int));
    
            var iDCatchParameter = iDCatch.HasValue ?
                new ObjectParameter("IDCatch", iDCatch) :
                new ObjectParameter("IDCatch", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowMessage_Result>("ShowMessage", iDSendParameter, iDCatchParameter);
        }
    
        public virtual ObjectResult<ShowUserInfo_Result> ShowUserInfo(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ShowUserInfo_Result>("ShowUserInfo", iDParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
